name: Snyk Security Scan
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          java-package: jdk

      - name: Build with Maven
        run: mvn package -DskipTests

      - name: Run Snyk to check Maven dependencies for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.13-11/x64
        with:
          args: --severity-threshold=high --json-file-output=maven-results.json
          command: test

      - name: Run Snyk to check root Dockerfile for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: your-docker-image-name
          dockerfile: Dockerfile
          args: --severity-threshold=high --json-file-output=root-dockerfile-results.json

      - name: Run Snyk to check client Dockerfile for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: your-client-image-name
          dockerfile: client/Dockerfile
          args: --severity-threshold=high --json-file-output=client-dockerfile-results.json

      - name: Run Snyk to check internal site Dockerfile for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: your-internal-site-image-name
          dockerfile: internal_site/Dockerfile
          args: --severity-threshold=high --json-file-output=internal-site-dockerfile-results.json

      - name: Run Snyk to check Java code for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.13-11/x64
        with:
          command: code test
          args: --severity-threshold=high --json-file-output=java-code-results.json

      - name: Upload scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: snyk-scan-results
          path: |
            *-results.json
          retention-days: 7